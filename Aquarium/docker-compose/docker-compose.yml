version: '3.4'
name: aquarium-manager
services:
  mongo:
    container_name: mongo-dev
    image: mongo:latest
    healthcheck:
      test: "echo 'db.stats().ok' | mongosh localhost:27017/admin --quiet -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD"
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_DATABASE=auth
      - MONGO_INITDB_ROOT_PASSWORD=pass
    networks:
      - mongo-compose-network
    ports:
      - '27017:27017'
    volumes:
      - ./MongoData:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: on-failure
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - mongo-compose-network
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-dev
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
    ports:
      - '8081:8081'
    volumes:
      - ./MongoData:/data/db
  influxdb:
    image: influxdb:latest
    volumes:
      # Mount for influxdb data directory and configuration
      - ./InfluxData:/var/lib/influxdb2:rw
    networks:
      - mongo-compose-network
    ports:
      - "8086:8086"
  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - "3002:3000"
    networks:
      - mongo-compose-network
  datasimulation:
    image: thomasschirgi/datasimulation:latest
    container_name: datasimulation2023
    networks:
      - mongo-compose-network
    ports:
      - "4999:80"
      - "502:502"
      - "1883:1883"
    volumes:
      - "./SimulationSettings:/app/SimulationSettings"
networks:
  mongo-compose-network:
    driver: bridge
